volumes:
  pg_data:
  static_data:
  media_data:

name: django_users

services:
  db:
    image: postgres:13
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 3s
      timeout: 3s
      retries: 5
    ports:
      - 5432:5432

  backend:
    build:
      context: ./django_users/
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - static_data:/backend_static
      - media_data:/app/media
    command:
      - /bin/sh
      - -c
      - |
        python manage.py collectstatic -c --noinput
        cp -r /app/static/. /backend_static/static
        python manage.py migrate
        gunicorn --bind 0.0.0.0:8000 django_users.wsgi


  nginx:
    image: nginx:1.25.2-alpine3.18-slim
    ports:
      - 8000:80
    depends_on:
      backend:
        condition: service_started
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_data:/usr/share/nginx/html
      - media_data:/usr/share/nginx/html/media/
